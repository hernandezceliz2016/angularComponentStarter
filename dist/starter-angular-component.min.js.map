{"version":3,"sources":["base.js","examComponent/examComponentApiService.js","examComponent/examComponentDirective.js","filters/filters.js","services/fakeApiCall.js","directives/showMoreOrLess/showMoreOrLess.js"],"names":["StarterAngularComponent","Modules","customDirectives","angular","module","customFilters","customServices","main","Base","ExamComponentApiService","$http","$rootScope","syncWithStoredCount","get","success","data","currentCount","count","$broadcast","error","console","log","this","getCurrentCount","incrementCount","undefined","$inject","service","ExamComponentDirective","examComponentApi","scope","restrict","replace","transclude","templateUrl","link","$scope","$element","$attrs","syncCount","noop","desregisterExamComponentListener","$on","directive","filter","input","wordsSeparator","ret","length","split","FakeApiCall","$q","testNgHttpRequest","deferred","defer","resolve","reject","promise","testAjaxRequest","onSuccessCallback","onErrorCallback","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","onerror","send","ShowMoreOrLess","$timeout","text","maxLength","showMoreText","showLessText","truncateSymbol","post","isTruncateable","parseInt","isTruncated","toggleCollapse","$apply","getTruncatedString","substring"],"mappings":"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","file":"starter-angular-component.min.js","sourcesContent":["var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n\r\n  var Modules = (function() {\r\n    function Modules() {}\r\n    Modules.customDirectives = angular.module(\"customDirectives\", []);\r\n    Modules.customFilters = angular.module(\"customFilters\", []);\r\n    Modules.customServices = angular.module(\"customServices\", []);\r\n    Modules.main = angular.module(\"starter.angular.component\", [\r\n      \"customDirectives\",\r\n      \"customFilters\",\r\n      \"customServices\"\r\n    ]);\r\n    return Modules;\r\n  })();\r\n\r\n  StarterAngularComponent.Modules = Modules;\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n","var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n  var Base;\r\n  (function(Base) {\r\n\r\n    var ExamComponentApiService = (function() {\r\n      // Constructor fn\r\n      function ExamComponentApiService($http, $rootScope) {\r\n        var self = this, currentCount; // currentCount is undefined until we get api data\r\n        // First initialization for currentCount\r\n        syncWithStoredCount();\r\n\r\n        this.getCurrentCount = function() { return currentCount; };\r\n        this.syncWithStoredCount = syncWithStoredCount;\r\n        this.incrementCount = function () { // Can only increment if we have some initial value\r\n          if (currentCount !== undefined) {\r\n            currentCount++;\r\n            $rootScope.$broadcast(\"examComponent:updateCount\");\r\n          }\r\n        };\r\n\r\n        // Functions\r\n        function syncWithStoredCount() {\r\n          $http.get(\"/demo/getStoredCount.json\")\r\n            .success(function(data) {\r\n              currentCount = data.count;\r\n              $rootScope.$broadcast(\"examComponent:updateCount\");\r\n            }).error(function(error) { console.log(error); });\r\n        }\r\n      }\r\n      ExamComponentApiService.$inject = [\"$http\", \"$rootScope\"];\r\n      return ExamComponentApiService;\r\n    })();\r\n    Base.ExamComponentApiService = ExamComponentApiService;\r\n\r\n    StarterAngularComponent.Modules.customServices.service(\"examComponentApi\",\r\n    [\"$http\", \"$rootScope\",\r\n      function($http, $rootScope) {\r\n        return new ExamComponentApiService($http, $rootScope);\r\n      }\r\n    ]);\r\n\r\n  })(Base = StarterAngularComponent.Base || (StarterAngularComponent.Base = {}));\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n","var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n  var Base;\r\n  (function(Base) {\r\n\r\n    /* <exam-component></exam-component>\r\n     */\r\n    var ExamComponentDirective = (function() {\r\n      function ExamComponentDirective(examComponentApi) {\r\n        this.scope = {};\r\n        this.restrict = \"E\";\r\n        this.replace = false;\r\n        this.transclude = false;\r\n        this.templateUrl = \"lib/examComponent/examComponentView.html\";\r\n        this.link = function($scope, $element, $attrs) {\r\n          angular.noop($element, $attrs);\r\n          syncCount();\r\n\r\n          $scope.incrementCount = function() {\r\n            examComponentApi.incrementCount();\r\n          };\r\n          // Event listeners\r\n          var desregisterExamComponentListener = $scope.$on(\"examComponent:updateCount\", syncCount);\r\n          $scope.$on(\"$destroy\", function() { desregisterExamComponentListener(); });\r\n          // Functions\r\n          function syncCount() { $scope.count = examComponentApi.getCurrentCount(); }\r\n        };\r\n      }\r\n\r\n      ExamComponentDirective.$inject = [\"examComponentApi\"];\r\n      return ExamComponentDirective;\r\n    })();\r\n\r\n    Base.ExamComponentDirective = ExamComponentDirective;\r\n    StarterAngularComponent.Modules.customDirectives.directive(\"examComponent\", [\r\n      \"examComponentApi\",\r\n      function(examComponentApi) {\r\n        return new ExamComponentDirective(examComponentApi);\r\n      }\r\n    ]);\r\n\r\n  })(Base = StarterAngularComponent.Base || (StarterAngularComponent.Base = {}));\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n","var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n  var Base;\r\n  (function(Base) {\r\n\r\n    // Filter that returns the first word using space as default word separator\r\n    StarterAngularComponent.Modules.customFilters.filter(\"firstWord\", function() {\r\n      return function(input, wordsSeparator) {\r\n        var ret = \"\";\r\n        if (wordsSeparator === undefined) {\r\n          wordsSeparator = \" \";\r\n        }\r\n        if (input && input.length) {\r\n          ret = input.split(wordsSeparator)[0];\r\n        }\r\n        return ret;\r\n      };\r\n    });\r\n    angular.noop(Base);\r\n\r\n  })(Base = StarterAngularComponent.Base || (StarterAngularComponent.Base = {}));\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n","var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n  var Base;\r\n  (function(Base) {\r\n\r\n    // FakeApiCall class will be exported as an angular service\r\n    var FakeApiCall = (function() {\r\n      function FakeApiCall($http, $q) {\r\n\r\n        // Call a backend method using angular's $http service\r\n        this.testNgHttpRequest = function() {\r\n          var deferred = $q.defer();\r\n          $http.get(\"/hiHttp\")\r\n            .success(function(data) {\r\n              deferred.resolve(data);\r\n            })\r\n            .error(function(error) {\r\n              deferred.reject(error);\r\n            });\r\n          return deferred.promise;\r\n        };\r\n\r\n        // Call a backend method using ajax\r\n        this.testAjaxRequest = function(onSuccessCallback, onErrorCallback) {\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open(\"GET\", \"/hiAjax\", true);\r\n          xhr.onreadystatechange = function() {\r\n            if (xhr.readyState === 4) { // NOTE: status 4 - request finished and response is ready\r\n              if (xhr.status === 200) { onSuccessCallback(xhr.responseText); } // NOTE: status 200 - \"OK\"\r\n              else { onErrorCallback(xhr); }\r\n            } else { onErrorCallback(xhr); }\r\n          };\r\n          xhr.onerror = function() { onErrorCallback(xhr); };\r\n          xhr.send();\r\n        };\r\n\r\n      }\r\n      FakeApiCall.$inject = [\"$http\", \"$q\"];\r\n      return FakeApiCall;\r\n    })();\r\n    Base.FakeApiCall = FakeApiCall;\r\n\r\n    StarterAngularComponent.Modules.customServices.service(\"fakeApiCall\", [\"$http\", \"$q\",\r\n      function($http, $q) {\r\n        return new FakeApiCall($http, $q);\r\n      }\r\n    ]);\r\n\r\n  })(Base = StarterAngularComponent.Base || (StarterAngularComponent.Base = {}));\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n","var StarterAngularComponent;\r\n(function(StarterAngularComponent) {\r\n  \"use strict\";\r\n  var Base;\r\n  (function(Base) {\r\n\r\n    /* <show-more-or-less data-text=\"{{ getInnerText() }}\"\r\n     *                    data-max-length=\"10\">\r\n     * <show-more-or-less>\r\n     */\r\n    var ShowMoreOrLess = (function() {\r\n      function ShowMoreOrLess($timeout) {\r\n        this.scope = {\r\n          text: \"@\",\r\n          maxLength: \"@\",\r\n          showMoreText: \"@\",\r\n          showLessText: \"@\",\r\n          truncateSymbol: \"@\"\r\n        };\r\n        this.restrict = \"E\";\r\n        this.replace = false;\r\n        this.transclude = false;\r\n        this.templateUrl = \"lib/directives/showMoreOrLess/showMoreOrLess.html\";\r\n        this.link = {\r\n          post: function($scope, $element, $attrs) {\r\n            angular.noop($element, $attrs);\r\n            if ($scope.showMoreText === undefined) {\r\n              $scope.showMoreText = \"[+] show more\";\r\n            }\r\n            if ($scope.showLessText === undefined) {\r\n              $scope.showLessText = \"[-] show less\";\r\n            }\r\n            if ($scope.truncateSymbol === undefined) {\r\n              $scope.truncateSymbol = \" ...\";\r\n            }\r\n            $scope.isTruncateable = function() {\r\n              return $scope.text.length > parseInt($scope.maxLength, 10);\r\n            };\r\n            $scope.isTruncated = true;\r\n            $scope.toggleCollapse = function() {\r\n              $timeout(function() {\r\n                $scope.isTruncated = !$scope.isTruncated;\r\n                $scope.$apply();\r\n              });\r\n            };\r\n            $scope.getTruncatedString = function() {\r\n              var maxLength = parseInt($scope.maxLength, 10) - $scope.truncateSymbol.length,\r\n                ret = $scope.text;\r\n              if (!$scope.isTruncateable() || !$scope.isTruncated) {\r\n                ret = $scope.text;\r\n              } else if (maxLength <= 0) {\r\n                ret = $scope.truncateSymbol;\r\n              } else if ($scope.text.length > maxLength) {\r\n                ret = $scope.text.substring(0, maxLength) + $scope.truncateSymbol;\r\n              }\r\n              return ret;\r\n            };\r\n          }\r\n        };\r\n      }\r\n      ShowMoreOrLess.$inject = [\"$timeout\"];\r\n      return ShowMoreOrLess;\r\n    })();\r\n    Base.ShowMoreOrLess = ShowMoreOrLess;\r\n\r\n    StarterAngularComponent.Modules.customDirectives.directive(\"showMoreOrLess\", [\r\n      \"$timeout\",\r\n      function($timeout) {\r\n        return new ShowMoreOrLess($timeout);\r\n      }\r\n    ]);\r\n\r\n  })(Base = StarterAngularComponent.Base || (StarterAngularComponent.Base = {}));\r\n})(StarterAngularComponent || (StarterAngularComponent = {}));\r\n"],"sourceRoot":"/source/"}